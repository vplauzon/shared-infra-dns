# Help:  https://aka.ms/yaml

resources:
- repo: self

variables:  []

trigger:
- master

stages:
  - stage:  build
    dependsOn:  []
    variables:  []
    jobs:
    - job:  main
      dependsOn:  []
      variables:  []
      continueOnError:  false
      pool:
        vmImage: 'ubuntu-latest'
      steps:
      # Publish "deploy-scripts" artefact
      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact: deploy-scripts'
        inputs:
          PathtoPublish: deploy-scripts
          ArtifactName: deploy-scripts
  - stage:  release
    dependsOn:  build
    variables: []
    jobs:
    - job:  main
      dependsOn:  []
      variables:
        location: eastus
        rg: vpl-dns
        deploy-storage-name: vpldnsdeploy
        deploy-container-name: artefacts
        folder:  $(System.TeamProject)/$(Build.DefinitionName)/$(Build.BuildId)/$(System.StageName)/$(System.StageAttempt)
        deployment-uid:  $(System.TeamProject)-$(Build.DefinitionName)-$(Build.BuildId)-$(System.StageName)-$(System.StageAttempt)
      pool:
        vmImage: ubuntu-latest
      steps:
      # Don't checkout repo
      - checkout: none
      # Download artefact from previous stage
      - download: current
        artifact: deploy-scripts
      - bash:  ls -l $(Pipeline.Workspace)/deploy-scripts
      # Deploy artefact storage
      - task: AzureResourceGroupDeployment@2
        displayName: Azure Deployment - artefact-storage.json
        inputs:
          azureSubscription: shared-infra
          resourceGroupName: $(rg)
          location: '$(location)'
          templateLocation:  Linked artifact
          csmFile: $(Pipeline.Workspace)/deploy-scripts/artefact-storage.json
          # csmParametersFile: $(Pipeline.Workspace)/deploy-scripts/artefact-storage.parameters.json
          overrideParameters: -storageAccountName $(deploy-storage-name) -containerName $(deploy-container-name)
        timeoutInMinutes: 3
      # Copy files to storage
      - task: AzureCLI@2
        displayName: Copy files to storage
        inputs:
          azureSubscription: shared-infra
          workingDirectory:  $(Pipeline.Workspace)/deploy-scripts
          scriptType: 'bash'
          scriptLocation: scriptPath
          scriptPath: $(Pipeline.Workspace)/deploy-scripts/copy-artefacts.sh
          arguments: https://$(deploy-storage-name).blob.core.windows.net/$(deploy-container-name)/$(folder)
      # Create storage SAS Token
      - task: AzureCLI@2
        displayName: Create SAS Token
        inputs:
          azureSubscription: shared-infra
          workingDirectory:  $(Pipeline.Workspace)/deploy-scripts
          scriptType: 'bash'
          scriptLocation: scriptPath
          scriptPath: $(Pipeline.Workspace)/deploy-scripts/create-sas-token.sh
          arguments: $(deploy-storage-name)
      # Deploy ARM template from artefact files
      - task: AzureResourceGroupDeployment@2
        displayName: Azure Deployment - vpl-dns.json
        inputs:
          azureSubscription: shared-infra
          resourceGroupName: $(rg)
          location: '$(location)'
          templateLocation:  Linked artifact
          csmFile: $(Pipeline.Workspace)/deploy-scripts/vpl-dns.json
          #csmParametersFile: $(Pipeline.Workspace)/deploy-scripts/deploy.prod.parameters.json
          overrideParameters: ''
        timeoutInMinutes: 3
